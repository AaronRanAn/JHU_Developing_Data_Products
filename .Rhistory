)
d1
d1 <- dPlot(
x = "rating",
y = "film",
groups = "website",
data = long_melt,
type = "bubble"
, bounds = list( x = 250, y = 50, width = 700, height = 2400)
)
d1$xAxis( type = "addMeasureAxis" )
d1$yAxis( type = "addCategoryAxis", orderRule = "film" )
d1$legend(
x = 200,
y = 10,
width = 300,
height = 200,
horizontalAlign = "left"
)
d1$set(height = 2500, width = 1000)
d1
d1$layer(
y ~ x
,groups = c("x","y")
,data = data.frame(x = c(1,10), y = rep(0,2))
,type="line"
)
d1
library(rCharts)
df <- data.frame(a  = rnorm(10), b = rnorm(10))
d1 <- dPlot(b~a,
data = df,
type = "bubble"
)
d1
library(rCharts)
df <- data.frame(id = 1:10, a  = rnorm(10), b = rnorm(10))
d1 <- dPlot(b~a,
groups = "a",
data = df,
type = "bubble"
,defaultColors = "#!['blue']!#"
)
d1$xAxis(type="addMeasureAxis")
d1$yAxis(type="addMeasureAxis",overrideMin = -2, overrideMax = 2)
d1
d1$layer(
y ~ x
,groups = c("x","y")
,data = data.frame(x = c(1,10), y = rep(0,2))
,type="line"
)
d1
d1
library(rCharts)
df <- data.frame(id = 1:10, a  = rnorm(10), b = rnorm(10))
d1 <- dPlot(b~a,
groups = "a",
data = df,
type = "bubble"
,defaultColors = "#!['blue']!#"
)
d1$xAxis(type="addMeasureAxis")
d1$yAxis(type="addMeasureAxis",overrideMin = -2, overrideMax = 2)
d1
d1$setTemplate(
afterScript = sprintf(
'
<script>
var line = d3.svg.line()
.x(function(d) { return myChart.axes[0]._draw.scale()(d.x); })
.y(function(d) { return myChart.axes[1]._draw.scale()(d.y); });
d3.select("#%s svg g")
.append("path")
.datum([{x:myChart.axes[0]._min,y:0},{x:myChart.axes[0]._max,y:0}])
.attr("d",line)
.style("stroke","blue")
.style("stroke-width",3)
</script>
'
,d1$params$dom
))
d1
dt<-data.frame(a=rnorm(20,2,1),b=rnorm(20,2,1),ID=seq(1,20,1))
p1 <- rPlot(x="a",y="b",data = dt,color="ID",
type = "point", size=list(const=2))
addline<-data.frame(y=3,x=seq(0,max(dt$a)),name=5)
smoothing <- data.frame(
loess.smooth(
x = dt$a,
y = dt$b,
),name=15
)
add<-rbind(addline, smoothing)
p1$layer(y~x,data=add,type="line",color='name')
p1
p1$layer(y~x,data=add,type="line",color=list(const = 'darkblue'))
dt<-data.frame(a=rnorm(20,2,1),b=rnorm(20,2,1),ID=seq(1,20,1))
p1 <- rPlot(x="a",y="b",data = dt,color="ID",
type = "point", size=list(const=2))
addline<-data.frame(y=3,x=seq(0,max(dt$a)),name=5)
smoothing <- data.frame(
loess.smooth(
x = dt$a,
y = dt$b,
),name=15
)
p1
add<-rbind(addline, smoothing)
p1
p1$layer(y~x,data=add,type="line",color=list(const = 'darkblue'))
p1
d1 <- dPlot(
x = "rating",
y = "film",
groups = "website",
data = long_melt,
type = "bubble"
, bounds = list( x = 250, y = 50, width = 700, height = 2400)
)
d1$xAxis( type = "addMeasureAxis" )
d1$yAxis( type = "addCategoryAxis", orderRule = "film" )
d1$legend(
x = 200,
y = 10,
width = 300,
height = 200,
horizontalAlign = "left"
)
d1$set(height = 2500, width = 1000)
d1
d1$highlight()
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
library(shiny)
shinyUI(
pageWithSidebar(
headerPanel = ("Data Science FTW!"),
sidebarPanel (
h3('Sidebar text')
),
mainPanel(
h3('Main Panel text')
)
)
)
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
compare = "IMDB_norm"
fan_comp = subset(long_melt, website == "Fandango_Stars" & website == compare)
d1 <- dPlot(
x = "rating",
y = "film",
groups = "website",
data = fan_comp,
type = "bubble"
, bounds = list( x = 250, y = 50, width = 700, height = 2400)
)
d1$xAxis( type = "addMeasureAxis" )
d1$yAxis( type = "addCategoryAxis", orderRule = "film" )
d1$legend(
x = 200,
y = 10,
width = 300,
height = 200,
horizontalAlign = "left"
)
d1$set(height = 2500, width = 1000)
d1
View(fan_comp)
View(long_melt)
fan_comp = subset(long_melt, website == "Fandango_Stars" | website == compare)
View(fan_comp)
d1 <- dPlot(
x = "rating",
y = "film",
groups = "website",
data = fan_comp,
type = "bubble"
, bounds = list( x = 250, y = 50, width = 700, height = 2400)
)
d1$xAxis( type = "addMeasureAxis" )
d1$yAxis( type = "addCategoryAxis", orderRule = "film" )
d1$legend(
x = 200,
y = 10,
width = 300,
height = 200,
horizontalAlign = "left"
)
d1$set(height = 2500, width = 1000)
d1
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
source("./Course Project/analysis_fandango.R")
shiny::runApp('Course Project/Shiny_Proj')
getwd()
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
shiny::runApp('Course Project/Shiny_Proj')
fan_score = read.csv('./Course Project/fandango_score_comparison.csv')
fan_scrap = read.csv('./Course Project/fandango_scrape.csv')
library(reshape)
long_star = fan_score[,c(1, 7, 10, 12, 13)]
as.character(long_star$FILM)
as.character(long_melt$film)
long_melt = melt(long_star, id.vars= "FILM")
names(long_melt) = c("film", "website", "rating")
long_melt[,1:2] = apply(long_melt[,1:2], 2, function(x) iconv(x,to="utf-8"))
View(long_melt)
library(rCharts)
d1 <- dPlot(
x = "rating",
y = "film",
groups = "website",
data = long_melt,
type = "bubble"
, bounds = list( x = 250, y = 50, width = 700, height = 2400)
)
d1$xAxis( type = "addMeasureAxis" )
d1$yAxis( type = "addCategoryAxis", orderRule = "film" )
d1$legend(
x = 200,
y = 10,
width = 300,
height = 200,
horizontalAlign = "left"
)
d1$set(height = 2500, width = 1000)
d1
shiny::runApp('Course Project')
unique(long_melt$website)
shiny::runApp('Course Project')
shiny::runApp('Course Project')
shiny::runApp('Course Project')
shiny::runApp('Course Project')
shiny::runApp('Course Project')
View(long_melt)
shiny::runApp('Course Project')
shiny::runApp('Course Project')
get_gdoc <- function(url){
require(RCurl)
s = getURLContent(url)
read.csv(textConnection(s))
}
durl <- "https://docs.google.com/spreadsheet/pub?key=0AovoNzJt5GetdGxyaVlpM3ZtTVBiNjlDS0hvanVORnc&single=true&gid=0&output=csv"
dat <- get_gdoc(durl)
dat2 <- reshape(dat, varying = names(dat)[2:35], direction = 'long', timevar = "year")
dat2m <- reshape2::melt(dat2, id = c(1:3, 6))
dat2m <- na.omit(transform(dat2m, value = as.numeric(as.character(value))))
names(dat2m) <- c('country', 'countrycode', 'year', 'id', 'gender', 'value')
shiny::runApp('Course Project')
shiny::runApp('Course Project')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('Course Project')
shiny::runApp('Course Project')
sort(unique(long_melt$website))
shiny::runApp('Course Project')
shiny::runApp('Course Project')
View(long_star)
View(fan_score)
names(fan_score)
long_star = fan_score[,c(1, 7, 10, 12, 13, 19, 20, 21)]
long_star = fan_score[,c(1, 7, 10, 12, 13)]
long_star_2 = fan_score[,c(1, 19, 20, 21)]
View(long_star_2)
long_melt_2 = melt(long_star_2, id.vars= "FILM")
library(reshape)
long_melt_2 = melt(long_star_2, id.vars= "FILM")
View(long_melt_2)
shiny::runApp('Course Project')
library(devtools)
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(slidify)
author ("first_deck")
library(ggplot2)
getwd
getwd()
source("../Course Project/data_preprocessing.R")
source("~/Course Project/data_preprocessing.R")
source("../Course Project/data_preprocessing.R")
getwd()
source("./Course Project/data_preprocessing.R")
source("../Course Project/data_preprocessing.R")
source("data_preprocessing.R")
getwd()
getwd(..)
source("~/Course Project/data_preprocessing.R")
source("~/MOOC/Data Sceince/Build Data Product/Assignment | Git/Course Project/data_preprocessing.R")
long_melt
long_melt
ggplot(long_melt, aes(x=rating, fill=website)) + geom_density(alpha=.3)
dir()
save(long_melt, file = "long_melt.RData")
load(long_melt.RData)
dir()
?load()
load("long_melt.RData")
install.packages("gridExtra")
# d1 <- dPlot(
#         x = "rating",
#         y = "film",
#         groups = "website",
#         data = long_melt,
#         type = "bubble"
#         , bounds = list( x = 250, y = 50, width = 700, height = 2400)
# )
#
# d1$xAxis( type = "addMeasureAxis" )
# d1$yAxis( type = "addCategoryAxis", orderRule = "film" )
# d1$legend(
#         x = 200,
#         y = 10,
#         width = 300,
#         height = 200,
#         horizontalAlign = "left"
# )
#
# d1$set(height = 2500, width = 1000)
#
# d1
# d1 <- dPlot(
#         x = "rating",
#         y = "film",
#         groups = "website",
#         data = long_melt,
#         type = "bubble"
#         , bounds = list( x = 250, y = 50, width = 700, height = 2400)
# )
#
# d1$xAxis( type = "addMeasureAxis" )
# d1$yAxis( type = "addCategoryAxis", orderRule = "film" )
# d1$legend(
#         x = 200,
#         y = 10,
#         width = 300,
#         height = 200,
#         horizontalAlign = "left"
# )
#
# d1$set(height = 2500, width = 1000)
#
# d1
library(knitr)
library(knitr)
names(long_melt)
names(long_melt2)
names(long_melt_2)
View(long_melt_2)
names(long_melt_2) = c("film", "website", "review_count")
View(long_melt_2)
unique(long_melt_2$website)
unique(long_melt$website)
long_melt_2$website <- revalue(long_melt_2$website, c("Metacritic_user_vote_count"="Metacritic_user_nom",
"IMDB_user_vote_count"="IMDB_norm", "Fandango_votes" = "Fandango_Stars"))
library(plyr)
long_melt_2$website <- revalue(long_melt_2$website, c("Metacritic_user_vote_count"="Metacritic_user_nom",
"IMDB_user_vote_count"="IMDB_norm", "Fandango_votes" = "Fandango_Stars"))
movie_rating <-  merge(long_melt,long_melt_2,by=c("film","website"))
View(movie_rating)
movie_rating_avg <- aggregate(movie_rating, by = film, FUN = mean, na.rm = T)
movie_rating_avg <- aggregate(movie_rating, by = movie_rating$film, FUN = mean, na.rm = T)
movie_rating_avg <- aggregate(movie_rating, by = list(film), FUN = mean, na.rm = T)
movie_rating_avg <- aggregate(movie_rating, by = list(movie_rating$film), FUN = mean, na.rm = T)
View(movie_rating_avg)
unique(movie_rating$film)
movie_rating_avg <- movie_rating_avg[,c(1,3)]
movie_rating_avg <- aggregate(movie_rating, by = list(movie_rating$film), FUN = mean, na.rm = T)
movie_rating_avg <- movie_rating_avg[,c(1,4)]
names(movie_rating_avg) <- c("film","avg_rating")
movie_rating <-  merge(movie_rating,movie_rating_avg,by=c("film"))
View(movie_rating)
movie_rating$rating_error <- movie_rating$rating - movie_rating$avg_rating
names(movie_rating)
library(rCharts)
d2 <- dPlot(
x = "review_count",
y = "rating_error",
groups = "website",
data = movie_rating,
type = "bubble"
)
d2$xAxis( type = "addMeasureAxis" )
d2$yAxis( type = "addMeasureAxis")
d2$legend(
x = 200,
y = 10,
width = 300,
height = 200,
horizontalAlign = "left"
)
d2
d2 <- dPlot(
x = "review_count",
y = "rating_error",
groups = "film",
data = movie_rating,
type = "bubble"
)
d2$xAxis( type = "addMeasureAxis" )
d2$yAxis( type = "addMeasureAxis")
d2$legend(
x = 200,
y = 10,
width = 300,
height = 200,
horizontalAlign = "left"
)
d2
d2 <- dPlot(
x = "review_count",
y = "rating_error",
groups = c("film", "website"),
data = movie_rating,
type = "bubble"
)
d2$xAxis( type = "addMeasureAxis" )
d2$yAxis( type = "addMeasureAxis")
d2$legend(
x = 200,
y = 10,
width = 300,
height = 200,
horizontalAlign = "left"
)
d2
library(rCharts)
d2 <- dPlot(
x = "review_count",
y = "rating_error",
groups = c("film", "website"),
data = movie_rating,
type = "bubble"
)
d2$xAxis( type = "addMeasureAxis" )
d2$yAxis( type = "addMeasureAxis")
d2$legend(
x = 200,
y = 10,
width = 300,
height = 200,
horizontalAlign = "left"
)
d2$set(height = 1500, width = 1000)
d2
library(rCharts)
d2 <- dPlot(
x = "review_count",
y = "rating_error",
groups = c("film", "website"),
data = movie_rating,
type = "bubble"
)
d2$xAxis( type = "addMeasureAxis" )
d2$yAxis( type = "addMeasureAxis")
d2$legend(
x = 200,
y = 10,
width = 300,
height = 200,
horizontalAlign = "left"
)
d2$set(height = 1000, width = 800)
d2
library(rCharts)
d2 <- dPlot(
x = "review_count",
y = "rating_error",
groups = c("film", "website"),
data = movie_rating,
type = "bubble"
)
d2$xAxis( type = "addMeasureAxis" )
d2$yAxis( type = "addMeasureAxis")
d2$legend(
x = 200,
y = 10,
width = 300,
height = 200,
horizontalAlign = "left"
)
d2$set(height = 800, width = 800)
d2
shiny::runApp('~/MOOC/Data Sceince/Build Data Product/Assignment | Git/Course Project')
shiny::runApp('~/MOOC/Data Sceince/Build Data Product/Assignment | Git/Course Project')
movie_rating
save(movie_rating, file = "movie_rating.RData")
shiny::runApp('~/MOOC/Data Sceince/Build Data Product/Assignment | Git/Course Project')
shiny::runApp('Course Project')
shiny::runApp('Course Project')
shiny::runApp('Course Project')
shiny::runApp('Course Project')
shiny::runApp('Course Project')
shiny::runApp('Course Project')
